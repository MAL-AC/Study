Запустим 2 контейнера
sudo docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:8.0.31

	--name some-mysql (Имя some-mysql)
	-e MYSQL_ROOT_PASSWORD=my-secret (YSQL_ROOT_PASSWORD -константа, пароль - my-secret
	-d запустить в режиме демона
	mysql:8.0.31 - имя образа

sudo docker run --name myphp -d --link some-mysql:db -p 8081:80 phpmyadmin/phpmyadmin

	--link some-mysql:db - связыввает контейнер myphp с my-scl
	-p 8081:80 - проброс портов
	phpmyadmin/phpmyadmin - имя образа на котором будет создан контейнер

Вводив в браузере http://localhost:8081/

Создаём Docker-compose файл
mal@SkyNet:~$ mkdir composefolder
mal@SkyNet:~$ cd composefolder/
mal@SkyNet:~/composefolder$ nano docker-compose.yml

************************Вариант 1*********************************
# Указываем версию синтаксиса файла docker-compose
version: '3.1'
# Описываем сервисы, которые будут запущены
services:
  # Первый сервис: MySQL сервер
  some-mysql:
    # Используемый Docker образ
    image: mysql:8.0.31
    # Переменные окружения для MySQL
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw

  # Второй сервис: phpMyAdmin
  myphp:
    # Используемый Docker образ
    image: phpmyadmin/phpmyadmin
    # Проброс портов: хост:контейнер
    ports:
      - 8081:80
    # Указываем зависимость от MySQL сервиса
    depends_on:
      - some-mysql
    # Переменные окружения для phpMyAdmin
    environment:
      PMA_HOST: some-mysql
*****************************************************************
************************Вариант 2********************************
ersion: '3.9'

services:
  db:
    image: mariadb:10.10.2
    restart: always
    environment:
      MYSQL_ROBOT_PASSWORD: 12345

  adminer:
    image: adminer:4.8.1
    restart: always
    ports:
      - 6080:8080
******************************************************************
sudo docker-compose up -d
