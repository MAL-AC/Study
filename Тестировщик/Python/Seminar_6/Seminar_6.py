# определить слово палиндром при помощи рекурсии

# a = input("Введите слово: ")

# def polindrome(x):
#     if len(x) <=1:
#         return True
#     elif x[0] == x[-1]:
#         return polindrome(x[1:-1])
#     return False
        


# print(polindrome(a))

# Даны два массива чисел. 
# Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве), 
# которых нет во втором массиве. Пользователь вводит число N - количество элементов в первом массиве, 
# затем N чисел - элементы массива. Затем число M - количество элементов во втором массиве. Затем элементы второго массива
# Ввод:
# 7
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1
# Вывод:
# 3 3 2 12

# a = input().split()
# b = input().split()
# result = []
#
# for i in a:
#     if a not in b:
#         result.append(i)
#
# print(result)

# Дан массив, состоящий из целых чисел. 
# Напишите программу, которая в данном массиве определит количество элементов, у которых два соседних и, 
# при этом, оба соседних элемента меньше данного. 
# Сначала вводится число N — количество элементов в массиве 
# Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.

# from random import randint
# lst = [randint(1,20) for i in range(15)]
# count=0
# for i in range(1,len(lst)-1):
#     if lst[i-1]<lst[i]>lst[i+1]:
#         count+=1

# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. 
# Считается, что любые два элемента, равные друг другу образуют одну пару, 
# которую необходимо посчитать. Вводится список чисел. Все числа списка находятся на разных строках.
# Ввод: Вывод:
# 1232 3 2

